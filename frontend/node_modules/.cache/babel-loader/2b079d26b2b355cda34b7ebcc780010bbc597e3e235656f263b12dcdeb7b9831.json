{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\davut\\\\PycharmProjects\\\\financial-app\\\\frontend\\\\src\\\\components\\\\MarketDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport * as XLSX from 'xlsx';\nimport { saveAs } from 'file-saver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MarketDetail() {\n  _s();\n  const {\n    symbol\n  } = useParams();\n  const [detailData, setDetailData] = useState(null);\n  const [quote, setQuote] = useState(null);\n  const FINNHUB_API_KEY = 'cva1t91r01qpd9sa8bi0cva1t91r01qpd9sa8big';\n\n  // Şirket profilini çekelim\n  useEffect(() => {\n    const fetchProfile = async () => {\n      try {\n        const profileUrl = `https://finnhub.io/api/v1/stock/profile2?symbol=${symbol}&token=${FINNHUB_API_KEY}`;\n        const profileResponse = await axios.get(profileUrl);\n        setDetailData(profileResponse.data);\n      } catch (error) {\n        console.error('Profil verisi alınırken hata:', error);\n      }\n    };\n    fetchProfile();\n  }, [symbol]);\n\n  // Fiyat verilerini çekelim\n  useEffect(() => {\n    const fetchQuote = async () => {\n      try {\n        const quoteUrl = `https://finnhub.io/api/v1/quote?symbol=${symbol}&token=${FINNHUB_API_KEY}`;\n        const quoteResponse = await axios.get(quoteUrl);\n        setQuote(quoteResponse.data);\n      } catch (error) {\n        console.error('Fiyat verisi alınırken hata:', error);\n      }\n    };\n    fetchQuote();\n  }, [symbol]);\n\n  // Geçmiş verileri çekip Excel'e aktaran fonksiyon\n  const exportHistoricalDataToExcel = async () => {\n    // 15.03.2025 tarihini UNIX zaman damgasına çeviriyoruz (UTC bazında)\n    const fromTimestamp = Math.floor(new Date('2025-03-15T00:00:00Z').getTime() / 1000);\n    // Şu anki zamanı UNIX zaman damgasına çeviriyoruz\n    const toTimestamp = Math.floor(Date.now() / 1000);\n    // Saatlik veri için resolution=60\n    const url = `https://finnhub.io/api/v1/stock/candles?symbol=${symbol}&resolution=60&from=${fromTimestamp}&to=${toTimestamp}&token=${FINNHUB_API_KEY}`;\n    try {\n      const response = await axios.get(url);\n      const data = response.data;\n      if (data.s !== 'ok') {\n        console.error('Geçmiş veriler alınamadı:', data);\n        return;\n      }\n      // API'den gelen veri: { t: [zaman damgaları], o: [açılış fiyatları],\n      // h: [en yüksek fiyatlar], l: [en düşük fiyatlar], c: [kapanış fiyatları], v: [hacimler] }\n      const {\n        t,\n        o,\n        h,\n        l,\n        c,\n        v\n      } = data;\n      const dataForExcel = t.map((timestamp, index) => ({\n        Date: new Date(timestamp * 1000).toLocaleString(),\n        Open: o[index],\n        High: h[index],\n        Low: l[index],\n        Close: c[index],\n        Volume: v[index]\n      }));\n      // Excel worksheet oluştur\n      const worksheet = XLSX.utils.json_to_sheet(dataForExcel);\n      // Yeni workbook oluştur ve worksheet'i ekle\n      const workbook = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(workbook, worksheet, 'Historical Data');\n      // Workbook'u binary array olarak yaz\n      const excelBuffer = XLSX.write(workbook, {\n        bookType: 'xlsx',\n        type: 'array'\n      });\n      // Blob oluşturup dosya indirmeyi tetikle\n      const blob = new Blob([excelBuffer], {\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n      });\n      saveAs(blob, `${symbol}_historical_data.xlsx`);\n    } catch (error) {\n      console.error('Excel dosyası oluşturulurken hata:', error);\n    }\n  };\n  if (!detailData || !quote) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Y\\xFCkleniyor...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [detailData.name, \" Detay Sayfas\\u0131\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Sembol: \", detailData.ticker]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\xDClke: \", detailData.country]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Borsa: \", detailData.exchange]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"G\\xFCncel Fiyat: $\", quote.c]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"De\\u011Fi\\u015Fim: \", quote.d.toFixed(2), \" (\", quote.dp.toFixed(2), \"%)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: exportHistoricalDataToExcel,\n      children: \"Excel'e Aktar (15.03.2025 - Bug\\xFCn, Saatlik)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(MarketDetail, \"rPUQ+gQfM799XPU9I+9GRbpPkqc=\", false, function () {\n  return [useParams];\n});\n_c = MarketDetail;\nexport default MarketDetail;\nvar _c;\n$RefreshReg$(_c, \"MarketDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","XLSX","saveAs","jsxDEV","_jsxDEV","MarketDetail","_s","symbol","detailData","setDetailData","quote","setQuote","FINNHUB_API_KEY","fetchProfile","profileUrl","profileResponse","get","data","error","console","fetchQuote","quoteUrl","quoteResponse","exportHistoricalDataToExcel","fromTimestamp","Math","floor","Date","getTime","toTimestamp","now","url","response","s","t","o","h","l","c","v","dataForExcel","map","timestamp","index","toLocaleString","Open","High","Low","Close","Volume","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","excelBuffer","write","bookType","type","blob","Blob","children","fileName","_jsxFileName","lineNumber","columnNumber","name","ticker","country","exchange","d","toFixed","dp","onClick","_c","$RefreshReg$"],"sources":["C:/Users/davut/PycharmProjects/financial-app/frontend/src/components/MarketDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\n\r\nfunction MarketDetail() {\r\n  const { symbol } = useParams();\r\n  const [detailData, setDetailData] = useState(null);\r\n  const [quote, setQuote] = useState(null);\r\n  const FINNHUB_API_KEY = 'cva1t91r01qpd9sa8bi0cva1t91r01qpd9sa8big';\r\n\r\n  // Şirket profilini çekelim\r\n  useEffect(() => {\r\n    const fetchProfile = async () => {\r\n      try {\r\n        const profileUrl = `https://finnhub.io/api/v1/stock/profile2?symbol=${symbol}&token=${FINNHUB_API_KEY}`;\r\n        const profileResponse = await axios.get(profileUrl);\r\n        setDetailData(profileResponse.data);\r\n      } catch (error) {\r\n        console.error('Profil verisi alınırken hata:', error);\r\n      }\r\n    };\r\n    fetchProfile();\r\n  }, [symbol]);\r\n\r\n  // Fiyat verilerini çekelim\r\n  useEffect(() => {\r\n    const fetchQuote = async () => {\r\n      try {\r\n        const quoteUrl = `https://finnhub.io/api/v1/quote?symbol=${symbol}&token=${FINNHUB_API_KEY}`;\r\n        const quoteResponse = await axios.get(quoteUrl);\r\n        setQuote(quoteResponse.data);\r\n      } catch (error) {\r\n        console.error('Fiyat verisi alınırken hata:', error);\r\n      }\r\n    };\r\n    fetchQuote();\r\n  }, [symbol]);\r\n\r\n  // Geçmiş verileri çekip Excel'e aktaran fonksiyon\r\n  const exportHistoricalDataToExcel = async () => {\r\n    // 15.03.2025 tarihini UNIX zaman damgasına çeviriyoruz (UTC bazında)\r\n    const fromTimestamp = Math.floor(new Date('2025-03-15T00:00:00Z').getTime() / 1000);\r\n    // Şu anki zamanı UNIX zaman damgasına çeviriyoruz\r\n    const toTimestamp = Math.floor(Date.now() / 1000);\r\n    // Saatlik veri için resolution=60\r\n    const url = `https://finnhub.io/api/v1/stock/candles?symbol=${symbol}&resolution=60&from=${fromTimestamp}&to=${toTimestamp}&token=${FINNHUB_API_KEY}`;\r\n\r\n    try {\r\n      const response = await axios.get(url);\r\n      const data = response.data;\r\n      if (data.s !== 'ok') {\r\n        console.error('Geçmiş veriler alınamadı:', data);\r\n        return;\r\n      }\r\n      // API'den gelen veri: { t: [zaman damgaları], o: [açılış fiyatları],\r\n      // h: [en yüksek fiyatlar], l: [en düşük fiyatlar], c: [kapanış fiyatları], v: [hacimler] }\r\n      const { t, o, h, l, c, v } = data;\r\n      const dataForExcel = t.map((timestamp, index) => ({\r\n        Date: new Date(timestamp * 1000).toLocaleString(),\r\n        Open: o[index],\r\n        High: h[index],\r\n        Low: l[index],\r\n        Close: c[index],\r\n        Volume: v[index],\r\n      }));\r\n      // Excel worksheet oluştur\r\n      const worksheet = XLSX.utils.json_to_sheet(dataForExcel);\r\n      // Yeni workbook oluştur ve worksheet'i ekle\r\n      const workbook = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(workbook, worksheet, 'Historical Data');\r\n      // Workbook'u binary array olarak yaz\r\n      const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n      // Blob oluşturup dosya indirmeyi tetikle\r\n      const blob = new Blob([excelBuffer], {\r\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n      });\r\n      saveAs(blob, `${symbol}_historical_data.xlsx`);\r\n    } catch (error) {\r\n      console.error('Excel dosyası oluşturulurken hata:', error);\r\n    }\r\n  };\r\n\r\n  if (!detailData || !quote) {\r\n    return <div>Yükleniyor...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{detailData.name} Detay Sayfası</h2>\r\n      <p>Sembol: {detailData.ticker}</p>\r\n      <p>Ülke: {detailData.country}</p>\r\n      <p>Borsa: {detailData.exchange}</p>\r\n      <p>Güncel Fiyat: ${quote.c}</p>\r\n      <p>Değişim: {quote.d.toFixed(2)} ({quote.dp.toFixed(2)}%)</p>\r\n      <button onClick={exportHistoricalDataToExcel}>\r\n        Excel'e Aktar (15.03.2025 - Bugün, Saatlik)\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MarketDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}